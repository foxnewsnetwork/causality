[{"/Users/conformity/Documents/Github/causality/src/index.tsx":"1","/Users/conformity/Documents/Github/causality/src/serviceWorker.ts":"2","/Users/conformity/Documents/Github/causality/src/App/index.tsx":"3","/Users/conformity/Documents/Github/causality/src/App/NavMain/index.tsx":"4","/Users/conformity/Documents/Github/causality/src/App/NavHeader/index.tsx":"5","/Users/conformity/Documents/Github/causality/src/data/provider.tsx":"6","/Users/conformity/Documents/Github/causality/src/data/client.ts":"7","/Users/conformity/Documents/Github/causality/src/App/routes.ts":"8","/Users/conformity/Documents/Github/causality/src/lib/utils/iter.ts":"9","/Users/conformity/Documents/Github/causality/src/App/SandboxApollo/index.tsx":"10","/Users/conformity/Documents/Github/causality/src/App/ModelHub/index.tsx":"11","/Users/conformity/Documents/Github/causality/src/App/SandboxTensorFlow/index.tsx":"12","/Users/conformity/Documents/Github/causality/src/App/SandboxVideo/index.tsx":"13","/Users/conformity/Documents/Github/causality/src/components/ModelViewer/index.tsx":"14","/Users/conformity/Documents/Github/causality/src/components/VideoEcho/index.tsx":"15","/Users/conformity/Documents/Github/causality/src/components/ModelBuilder/index.tsx":"16","/Users/conformity/Documents/Github/causality/src/hooks/use-suspense.ts":"17","/Users/conformity/Documents/Github/causality/src/components/PictureEcho/index.tsx":"18","/Users/conformity/Documents/Github/causality/src/components/StreamVideo/index.tsx":"19","/Users/conformity/Documents/Github/causality/src/components/Loading/index.tsx":"20","/Users/conformity/Documents/Github/causality/src/data/queries/HelloWorld.ts":"21","/Users/conformity/Documents/Github/causality/src/App/TrainingHub/index.tsx":"22","/Users/conformity/Documents/Github/causality/src/App/TrainingSetImages/index.tsx":"23","/Users/conformity/Documents/Github/causality/src/App/TrainingHub/api.ts":"24","/Users/conformity/Documents/Github/causality/src/App/TrainingSetImages/api.ts":"25","/Users/conformity/Documents/Github/causality/src/data/queries/ListTrainingSets.ts":"26","/Users/conformity/Documents/Github/causality/src/data/queries/GetTrainingSetImages.ts":"27"},{"size":519,"mtime":1610247765016,"results":"28","hashOfConfig":"29"},{"size":5201,"mtime":1578252216831,"results":"30","hashOfConfig":"29"},{"size":656,"mtime":1611721100537,"results":"31","hashOfConfig":"29"},{"size":1254,"mtime":1611721295385,"results":"32","hashOfConfig":"29"},{"size":581,"mtime":1610083822990,"results":"33","hashOfConfig":"29"},{"size":344,"mtime":1610164966873,"results":"34","hashOfConfig":"29"},{"size":273,"mtime":1610247346998,"results":"35","hashOfConfig":"29"},{"size":614,"mtime":1611721149487,"results":"36","hashOfConfig":"29"},{"size":3616,"mtime":1578258658559,"results":"37","hashOfConfig":"29"},{"size":814,"mtime":1610247704368,"results":"38","hashOfConfig":"29"},{"size":177,"mtime":1597010314825,"results":"39","hashOfConfig":"29"},{"size":516,"mtime":1596923975999,"results":"40","hashOfConfig":"29"},{"size":321,"mtime":1596840842156,"results":"41","hashOfConfig":"29"},{"size":938,"mtime":1596926089556,"results":"42","hashOfConfig":"29"},{"size":988,"mtime":1596925867310,"results":"43","hashOfConfig":"29"},{"size":1006,"mtime":1596923901414,"results":"44","hashOfConfig":"29"},{"size":1405,"mtime":1595199950077,"results":"45","hashOfConfig":"29"},{"size":544,"mtime":1596422761282,"results":"46","hashOfConfig":"29"},{"size":1823,"mtime":1596925737067,"results":"47","hashOfConfig":"29"},{"size":270,"mtime":1595134548770,"results":"48","hashOfConfig":"29"},{"size":134,"mtime":1610247553547,"results":"49","hashOfConfig":"29"},{"size":1700,"mtime":1611895358773,"results":"50","hashOfConfig":"29"},{"size":910,"mtime":1611895389094,"results":"51","hashOfConfig":"29"},{"size":796,"mtime":1611895338768,"results":"52","hashOfConfig":"29"},{"size":1084,"mtime":1611893467217,"results":"53","hashOfConfig":"29"},{"size":262,"mtime":1611894853263,"results":"54","hashOfConfig":"29"},{"size":377,"mtime":1611891421157,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"17ejc8d",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/conformity/Documents/Github/causality/src/index.tsx",[],["116","117"],"/Users/conformity/Documents/Github/causality/src/serviceWorker.ts",[],"/Users/conformity/Documents/Github/causality/src/App/index.tsx",[],"/Users/conformity/Documents/Github/causality/src/App/NavMain/index.tsx",[],"/Users/conformity/Documents/Github/causality/src/App/NavHeader/index.tsx",[],"/Users/conformity/Documents/Github/causality/src/data/provider.tsx",[],"/Users/conformity/Documents/Github/causality/src/data/client.ts",[],"/Users/conformity/Documents/Github/causality/src/App/routes.ts",[],"/Users/conformity/Documents/Github/causality/src/lib/utils/iter.ts",["118"],"import { Fn2 } from './types';\n\nexport function reduce<T, X>(iter: Iterable<T>, reduceFn: Fn2<X, T, X>, init: X): X {\n  for (const t of iter) {\n    init = reduceFn(init, t)\n  }\n  return init;\n}\n\nexport function* map<T, O>(iter: Iterable<T>, mapFn: (t: T) => O): Iterable<O> {\n  for (const t of iter) {\n    yield mapFn(t)\n  }\n}\n\nexport function* filter<T>(iter: Iterable<T>, filterFn: (t: T) => boolean): Iterable<T> {\n  for (const t of iter) {\n    if (filterFn(t)) {\n      yield t;\n    }\n  }\n}\n\nexport function* concat<T>(itA: Iterable<T>, itB: Iterable<T>): Iterable<T> {\n  for (const a of itA) {\n    yield a;\n  }\n  for (const b of itB) {\n    yield b;\n  }\n}\n\nexport function any<T>(it: Iterable<T>, checkFn: (t: T) => boolean): boolean {\n  for (const t of it) {\n    if (checkFn(t)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport function isEmpty<T>(it: Iterable<T>): boolean {\n  for (const _ of it) {\n    return false\n  }\n  return true\n}\n\nexport function all<T>(it: Iterable<T>, isStillTrue: (t: T) => boolean): boolean {\n  return reduce(it, (wasTrue: boolean, t) => wasTrue && isStillTrue(t), true)\n}\n\nexport function has<T>(it: Iterable<T>, t: T): boolean {\n  return any(it, x => x === t);\n}\n\nexport function* push<T>(it: Iterable<T>, t: T): Iterable<T> {\n  yield* it\n  yield t\n}\n\nexport function* unshift<T>(it: Iterable<T>, t: T): Iterable<T> {\n  yield t\n  yield* it\n}\n\nexport function* zero(): Iterable<any> { }\n\nexport function* lift0<T>(t: T): Iterable<T> {\n  yield t\n}\n\n/**\n * Given two lists like:\n * \n * a = [1,2,3]\n * b = [\"a\", \"b\", \"c\", \"d\"]\n * \n * and a zip function that looks like:\n * \n * zipFn = (a, b) => `${a}-${b}`\n * \n * It will return an iterable that would yield out like\n * \n * ['1-a', '2-b', '3-c']\n * \n * Before terminating.\n * \n * The resulting iterable will have the length of the\n * which ever member is shorter\n * \n * @param itA \n * @param itB \n * @param zipFn \n */\nexport function* zipWith<A, B, C>(itA: Iterable<A>, itB: Iterable<B>, zipFn: (a: A, b: B) => C): Iterable<C> {\n  if (isEmpty(itA) || isEmpty(itB)) {\n    return\n  } else {\n    yield zipFn(first(itA), first(itB))\n    const restA = skip(itA, 1)\n    const restB = skip(itB, 1)\n    yield* zipWith(restA, restB, zipFn)\n  }\n}\n\n/**\n * Due to limitations with typescript, iterables can't contain nulls\n * @param it \n */\nexport function first<T>(it: Iterable<T>): T {\n  let output;\n  for (const t of it) {\n    output = t;\n    break;\n  }\n  if (output != null) {\n    return output;\n  } else {\n    throw new Error('unexpected empty iterator')\n  }\n}\n\nexport function* skip<T>(it: Iterable<T>, n: number): Iterable<T> {\n  let i = 0;\n  for (const t of it) {\n    if (i < n) {\n      i++\n    } else {\n      yield t\n    }\n  }\n}\n\nexport function* drop<T>(it: Iterable<T>, n: number): Iterable<T> {\n  let i = 0\n  for (const t of it) {\n    if (i > n) {\n      yield t\n    } else {\n      i++\n    }\n  }\n}\n\nexport function* take<T>(it: Iterable<T>, n: number): Iterable<T> {\n  let i = 0;\n  for (const t of it) {\n    if (i >= n) {\n      return;\n    } else {\n      i++;\n      yield t;\n    }\n  }\n}\n\nexport function* takeWhile<T>(it: Iterable<T>, condFn: (t: T) => boolean): Iterable<T> {\n  for (const t of it) {\n    if (condFn(t)) {\n      yield t;\n    } else {\n      continue;\n    }\n  }\n}\n\nexport function* takeUntil<T>(\n  it: Iterable<T>,\n  condFn: (t: T) => boolean\n): Iterable<T> {\n  for (const t of it) {\n    if (condFn(t)) {\n      yield t;\n    } else {\n      break;\n    }\n  }\n}\n\nexport function* range(start: number, finish: number, step: number = 1): Iterable<number> {\n  for (let i = start; i < finish; i += step) {\n    yield i\n  }\n}","/Users/conformity/Documents/Github/causality/src/App/SandboxApollo/index.tsx",[],"/Users/conformity/Documents/Github/causality/src/App/ModelHub/index.tsx",[],"/Users/conformity/Documents/Github/causality/src/App/SandboxTensorFlow/index.tsx",[],"/Users/conformity/Documents/Github/causality/src/App/SandboxVideo/index.tsx",[],"/Users/conformity/Documents/Github/causality/src/components/ModelViewer/index.tsx",[],"/Users/conformity/Documents/Github/causality/src/components/VideoEcho/index.tsx",[],"/Users/conformity/Documents/Github/causality/src/components/ModelBuilder/index.tsx",["119","120"],"import React, { useMemo, useCallback } from 'react';\nimport * as tf from '@tensorflow/tfjs';\nimport { Button } from '@material-ui/core';\n\ntype Props = {\n  model?: tf.Sequential,\n  updateModel: (m: tf.Sequential) => void\n}\n\nconst ModelBuilder = (props: Props) => {\n  const model = useMemo(() => {\n    if (props.model != null) {\n      return props.model;\n    }\n    return tf.sequential();\n  }, [props.model])\n\n  const addLayer = useCallback(() => {\n    const layer = tf.layers.dense({ units: 1, inputShape: [1], useBias: true });\n    model.add(layer);\n    props.updateModel(model);\n  }, [model])\n\n  const resetModel = useCallback(() => {\n    props.updateModel(tf.sequential());\n  }, [])\n\n  return (\n    <div className=\"model-builder__button-group\">\n      <Button variant=\"outlined\" color=\"primary\" onClick={addLayer}>\n        Add Layer\n      </Button>\n      <Button variant=\"outlined\" color=\"secondary\" onClick={resetModel}>\n        Reset Model\n      </Button>\n    </div>\n  )\n}\n\nexport default ModelBuilder;\n","/Users/conformity/Documents/Github/causality/src/hooks/use-suspense.ts",["121","122"],"import { useCallback } from 'react';\n\ntype Suspender<T> = {\n  read(): T;\n  rerun(): void;\n  purge(): void;\n}\n\nenum Status {\n  PRERUN = \"PRERUN\",\n  PENDING = \"PENDING\",\n  ERROR = \"ERROR\",\n  SUCCESS = \"SUCCESS\"\n}\n\ntype State<T> = {\n  status: Status,\n  promise: Promise<void>,\n  error?: Error,\n  result?: T\n}\n\nconst refMap: Map<Function, State<any>> = new Map();\n\nexport default function useSuspense<T>(asyncFn: () => Promise<T>): Suspender<T> {\n  const state = refMap.get(asyncFn) || {\n    status: Status.PRERUN,\n    promise: Promise.resolve(),\n  };\n\n  const rerun = useCallback(() => {\n    state.status = Status.PENDING;\n    state.promise = asyncFn()\n      .then(result => {\n        state.result = result;\n        state.status = Status.SUCCESS;\n      })\n      .catch(error => {\n        state.error = error;\n        state.status = Status.ERROR;\n      });\n    refMap.set(asyncFn, state)\n  }, [asyncFn])\n\n  const read = useCallback(() => {\n    switch (state.status) {\n      case Status.PRERUN:\n        rerun();\n        throw state.promise;\n      case Status.ERROR:\n        throw state.error;\n      case Status.PENDING:\n        throw state.promise;\n      case Status.SUCCESS:\n        return state.result as T;\n      default:\n        throw new Error('unknown error')\n    }\n  }, [state.status])\n\n  const purge = useCallback(() => {\n    refMap.delete(asyncFn);\n  }, [asyncFn])\n\n  return { read, rerun, purge };\n}\n","/Users/conformity/Documents/Github/causality/src/components/PictureEcho/index.tsx",["123","124"],"import React, { useCallback, useState } from 'react';\n\ntype Props = {\n  takePicture: () => Promise<Blob>\n}\n\nconst PictureEcho = (props: Props) => {\n  const [picURL, setPicURL] = useState('')\n  const takePicture = useCallback(() => {\n    props.takePicture().then(blob => {\n      const dataURI = URL.createObjectURL(blob);\n      setPicURL(dataURI);\n    })\n  }, [props.takePicture])\n  return (\n    <div>\n      <img src={picURL} />\n      <button onClick={takePicture}>\n        Take Pic\n      </button>\n    </div>\n  )\n}\n\nexport default PictureEcho;\n","/Users/conformity/Documents/Github/causality/src/components/StreamVideo/index.tsx",["125"],"import React, { useEffect, useRef, createContext, useCallback, useMemo } from 'react';\nimport './style.css';\n\n\ntype Props = {\n  stream: MediaStream;\n  children: React.ReactNode;\n}\n\ntype API = {\n  takePicture(): Promise<Blob>;\n}\nconst ApiCtx: React.Context<API> = createContext({\n  takePicture: () => Promise.reject(new Error(\"not ready\"))\n})\n\nconst Provider = (ApiCtx.Provider as unknown as React.ComponentClass<{ value: API }>);\n\nexport { ApiCtx as StreamVideoContext }\n\nexport default function StreamVideo(props: Props) {\n  const vRef: React.RefObject<HTMLVideoElement> = useRef(null);\n  const cRef: React.RefObject<HTMLCanvasElement> = useRef(null);\n  const takePicture: API[\"takePicture\"] = useCallback(() => {\n    if (cRef.current != null && vRef.current != null) {\n      const ctx = cRef.current.getContext('2d');\n      ctx?.drawImage(vRef.current, 0, 0);\n      return new Promise((resolve, reject) => {\n        if (cRef.current != null) {\n          cRef.current.toBlob((blob) => {\n            if (blob != null) {\n              resolve(blob);\n            } else {\n              reject(new Error(\"unable to capture blob\"));\n            }\n          }, \"image/png\");\n        } else {\n          reject(new Error(\"canvas not available\"));\n        }\n      })\n    } else {\n      return Promise.reject(\"Either canvas or the video element are unavailable\");\n    }\n  }, [cRef, vRef]);\n\n  const api = useMemo(() => ({\n    takePicture\n  }), [takePicture]);\n\n  useEffect(() => {\n    if (vRef?.current != null) {\n      vRef.current.srcObject = props.stream;\n      vRef.current.play();\n    }\n  }, [vRef?.current]);\n\n  return (\n    <>\n      <canvas className=\"stream-video-canvas\" ref={cRef} />\n      <video className=\"stream-video\" ref={vRef} />\n      <Provider value={api}>\n        {props.children}\n      </Provider>\n    </>\n  )\n}\n","/Users/conformity/Documents/Github/causality/src/components/Loading/index.tsx",[],"/Users/conformity/Documents/Github/causality/src/data/queries/HelloWorld.ts",[],"/Users/conformity/Documents/Github/causality/src/App/TrainingHub/index.tsx",[],"/Users/conformity/Documents/Github/causality/src/App/TrainingSetImages/index.tsx",[],"/Users/conformity/Documents/Github/causality/src/App/TrainingHub/api.ts",[],"/Users/conformity/Documents/Github/causality/src/App/TrainingSetImages/api.ts",[],"/Users/conformity/Documents/Github/causality/src/data/queries/ListTrainingSets.ts",[],"/Users/conformity/Documents/Github/causality/src/data/queries/GetTrainingSetImages.ts",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":43,"column":14,"nodeType":"132","messageId":"133","endLine":43,"endColumn":15},{"ruleId":"134","severity":1,"message":"135","line":22,"column":6,"nodeType":"136","endLine":22,"endColumn":13,"suggestions":"137"},{"ruleId":"134","severity":1,"message":"135","line":26,"column":6,"nodeType":"136","endLine":26,"endColumn":8,"suggestions":"138"},{"ruleId":"134","severity":1,"message":"139","line":43,"column":6,"nodeType":"136","endLine":43,"endColumn":15,"suggestions":"140"},{"ruleId":"134","severity":1,"message":"141","line":59,"column":6,"nodeType":"136","endLine":59,"endColumn":20,"suggestions":"142"},{"ruleId":"134","severity":1,"message":"135","line":14,"column":6,"nodeType":"136","endLine":14,"endColumn":25,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":17,"column":7,"nodeType":"146","endLine":17,"endColumn":27},{"ruleId":"134","severity":1,"message":"147","line":55,"column":6,"nodeType":"136","endLine":55,"endColumn":21,"suggestions":"148"},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"@typescript-eslint/no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["151"],["152"],"React Hook useCallback has a missing dependency: 'state'. Either include it or remove the dependency array.",["153"],"React Hook useCallback has missing dependencies: 'rerun', 'state.error', 'state.promise', and 'state.result'. Either include them or remove the dependency array.",["154"],["155"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'props.stream'. Either include it or remove the dependency array. Mutable values like 'vRef.current' aren't valid dependencies because mutating them doesn't re-render the component.",["156"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"159","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [model, props]",{"range":"168","text":"169"},"Update the dependencies array to be: [props]",{"range":"170","text":"171"},"Update the dependencies array to be: [asyncFn, state]",{"range":"172","text":"173"},"Update the dependencies array to be: [rerun, state.error, state.promise, state.result, state.status]",{"range":"174","text":"175"},{"range":"176","text":"171"},"Update the dependencies array to be: [props.stream]",{"range":"177","text":"178"},[585,592],"[model, props]",[681,683],"[props]",[889,898],"[asyncFn, state]",[1272,1286],"[rerun, state.error, state.promise, state.result, state.status]",[359,378],[1588,1603],"[props.stream]"]